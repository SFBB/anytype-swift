default_platform(:ios)

platform :ios do

  lane :branch_build do |options| 

    if is_ci
      ensure_git_status_clean(
        show_uncommitted_changes: true,
        show_diff: true
      )
    end

    xcodeproj = ENV["APP_PROJECT"]
   
    if is_ci
      setup_ci
      match(readonly: true)
      set_api_key
    end

    version = "0.0.1"

    if is_ci
      build_number = latest_testflight_build_number(version: "0.0.1") + 1
    else
      build_number = "0"
    end

    increment_version_number_in_xcodeproj(version_number: version)
    increment_build_number(build_number: build_number, xcodeproj: xcodeproj, skip_info_plist: true)

    commit = last_git_commit
    short_hash = commit[:abbreviated_commit_hash]
    
    options_tf_comment = options[:tf_comment] 
    tf_comment = options_tf_comment.nil? || options_tf_comment.empty? ? ENV["GITHUB_REF_NAME"] : options_tf_comment
    
    add_badge(
      shield: "#{short_hash}-#{version}(#{build_number})-blue",
      no_badge: true
    )

    set_all_env_to_info_plist

    build_app(
      scheme: ENV["APP_TARGET"], 
      configuration: ENV["APP_CONF_DEVELOP"],
      include_symbols: true,
      use_system_scm: true,
      archive_path: "./build/archive",
      output_directory: "./build/result",
      output_name: "Anytype.ipa",
      xcargs: ENV['BUILD_OPTIONS']
    )

    if is_ci
      upload_to_testflight(
        skip_waiting_for_build_processing: true,
        changelog: tf_comment
        )
    else
      upload_to_testflight(
        skip_waiting_for_build_processing: true,
        ipa: "./build/result/Anytype.ipa",
        changelog: tf_comment
      )
    end

    if is_ci
      message = "Anytype Dev Version: **#{version}(#{build_number})**. Comment: **#{tf_comment}** :gem::gem::gem:"
      sh("echo FASTLANE_SUMMARY='#{message}' >> $GITHUB_ENV")
      
      reset_git_repo(skip_clean: true)
    end

  end

end
