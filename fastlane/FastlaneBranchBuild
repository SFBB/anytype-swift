default_platform(:ios)

platform :ios do

  lane :branch_build do |options| 

    if is_ci
      ensure_git_status_clean(
        show_uncommitted_changes: true,
        show_diff: true
      )
    end

    xcodeproj = ENV["APP_PROJECT"]
   
    if is_ci
      setup_ci
      match(readonly: true)
      set_api_key
    end

    version = "0.0.1"

    if is_ci
      build_number = latest_testflight_build_number(version: "0.0.1") + 1
    else
      build_number = "0"
    end

    increment_version_number_in_xcodeproj(version_number: version)
    increment_build_number(build_number: build_number, xcodeproj: xcodeproj, skip_info_plist: true)

    commit = last_git_commit
    short_hash = commit[:abbreviated_commit_hash]

    tf_comment = options[:tf_comment] || ENV["GITHUB_REF_NAME"]
    
    # add_badge(
    #   shield: "#{short_hash}-#{version}(#{build_number})-blue",
    #   no_badge: true
    # )

    # set_amplitude_api_key_to_info_plist

    # build_app(
    #   scheme: ENV["APP_TARGET"], 
    #   configuration: ENV["APP_CONF_DEVELOP"],
    #   include_symbols: true,
    #   use_system_scm: true,
    #   archive_path: "./build/archive",
    #   output_directory: "./build/result",
    #   output_name: "Anytype.ipa",
    #   xcargs: ENV['BUILD_OPTIONS'],
    #   cloned_source_packages_path: ENV['SPM_DERIVED_DATA']
    # )

    # if is_ci
    #   upload_to_testflight(skip_waiting_for_build_processing: true)
    # else
    #   upload_to_testflight(
    #     skip_waiting_for_build_processing: true,
    #     ipa: "./build/result/Anytype.ipa"
    #   )
    # end
    # echo "MY_VARIABLE=Hello from the script!" >> $GITHUB_ENV

    if is_ci
      message = "Version: **#{version}(#{build_number})**. Comment: **#{tf_comment}, #{ENV["GITHUB_REF_NAME"]}** :gem::gem::gem:"
      sh("echo FASTLANE_SUMMARY='#{message}' >> $GITHUB_ENV")
      
      reset_git_repo(skip_clean: true)
    end

  end

end
