default_platform(:ios)

platform :ios do

  # Bump dev build number
  lane :bump_dev_build_number do
    ensure_git_status_clean

    build_number = increment_build_number(xcodeproj: ENV["APP_PROJECT"], skip_info_plist: true)
    version = get_version_number(xcodeproj: ENV["APP_PROJECT"], target: ENV["APP_TARGET"])

    commit_version_bump(
      message: "Bump version #{version}(#{build_number})",
      xcodeproj: ENV["APP_PROJECT"],
      no_verify: true
    )

    add_git_tag(tag: "dev/#{version}/#{build_number}")
  end

  # Increment **patch** app version
  # 0.3.0 -> 0.3.1
  lane :bump_patch_app_version_number do
    bump_app_version_number(
      bump_type: "patch"
    )
  end

  # Increment **minor** app version
  # 0.3.0 -> 0.4.0
  lane :bump_minor_app_version_number do
    bump_app_version_number(
      bump_type: "minor"
    )
  end

  # Increment **major** app version
  # 0.3.0 -> 1.0.0
  lane :bump_major_app_version_number do
    bump_app_version_number(
      bump_type: "major"
    )
  end

  lane :increment_build do
    increment_build_number(xcodeproj:  ENV["APP_PROJECT"], skip_info_plist: true)
  end

  # Private lane
  
  private_lane :bump_app_version_number do |options|
    increment_build_number(
      build_number: "0",
      xcodeproj:  ENV["APP_PROJECT"],
      skip_info_plist: true
    )

    increment_version_number_in_xcodeproj(
      bump_type: options[:bump_type],
      xcodeproj:  ENV["APP_PROJECT"]
    )

  end

  lane :increment_build_and_push do |options|

    xcodeproj = ENV["APP_PROJECT"]
    current_branch = git_branch
    temp_branch = "#{current_branch}-temp"
    
    ensure_git_status_clean(
      show_uncommitted_changes: true,
      show_diff: true
    )

    sh("git checkout -b " + temp_branch)

    build_number = increment_build_number(xcodeproj: xcodeproj, skip_info_plist: true)
    version = get_version_number(xcodeproj: xcodeproj, target: ENV["APP_TARGET"])
    
    commit_version_bump(
      message: "Bump version #{version}(#{build_number})",
      xcodeproj: xcodeproj,
      no_verify: true
    )

    sh("git checkout " + current_branch)

    git_pull

    sh("git merge --ff --no-verify " + temp_branch)
    sh("git branch -d " + temp_branch)

    push_to_git_remote(no_verify: true)
  end

end
