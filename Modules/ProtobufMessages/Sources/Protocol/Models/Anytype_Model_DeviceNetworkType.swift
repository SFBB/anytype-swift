// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pkg/lib/pb/model/protos/models.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

public enum Anytype_Model_DeviceNetworkType: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case wifi // = 0
  case cellular // = 1
  case notConnected // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .wifi
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .wifi
    case 1: self = .cellular
    case 2: self = .notConnected
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .wifi: return 0
    case .cellular: return 1
    case .notConnected: return 2
    case .UNRECOGNIZED(let i): return i
    }
  }

}

extension Anytype_Model_DeviceNetworkType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_DeviceNetworkType] = [
    .wifi,
    .cellular,
    .notConnected,
  ]
}
extension Anytype_Model_DeviceNetworkType: @unchecked Sendable {}

extension Anytype_Model_DeviceNetworkType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "WIFI"),
    1: .same(proto: "CELLULAR"),
    2: .same(proto: "NOT_CONNECTED"),
  ]
}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "anytype.model"
