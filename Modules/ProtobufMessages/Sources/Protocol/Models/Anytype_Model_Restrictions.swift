// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pkg/lib/pb/model/protos/models.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf
public struct Anytype_Model_Restrictions {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var object: [Anytype_Model_Restrictions.ObjectRestriction] = []

  public var dataview: [Anytype_Model_Restrictions.DataviewRestrictions] = []

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum ObjectRestriction: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case none // = 0

    /// restricts delete
    case delete // = 1

    /// restricts work with relations
    case relations // = 2

    /// restricts work with blocks
    case blocks // = 3

    /// restricts work with details
    case details // = 4

    /// restricts type changing
    case typeChange // = 5

    /// restricts layout changing
    case layoutChange // = 6

    /// restricts template creation from this object
    case template // = 7

    /// restricts duplicate object
    case duplicate // = 8

    /// can be set only for types. Restricts creating objects of this type
    case createObjectOfThisType // = 9

    /// object is not allowed to publish
    case publish // = 10
    case UNRECOGNIZED(Int)

    public init() {
      self = .none
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0:
          self = .none
      case 1:
          self = .delete
      case 2:
          self = .relations
      case 3:
          self = .blocks
      case 4:
          self = .details
      case 5:
          self = .typeChange
      case 6:
          self = .layoutChange
      case 7:
          self = .template
      case 8:
          self = .duplicate
      case 9:
          self = .createObjectOfThisType
      case 10:
          self = .publish
      default:
          self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .none:
          return 0
      case .delete:
          return 1
      case .relations:
          return 2
      case .blocks:
          return 3
      case .details:
          return 4
      case .typeChange:
          return 5
      case .layoutChange:
          return 6
      case .template:
          return 7
      case .duplicate:
          return 8
      case .createObjectOfThisType:
          return 9
      case .publish:
          return 10
      case .UNRECOGNIZED(let i):
          return i
      }
    }

  }

  public enum DataviewRestriction: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case dvnone // = 0
    case dvrelation // = 1
    case dvcreateObject // = 2
    case dvviews // = 3
    case UNRECOGNIZED(Int)

    public init() {
      self = .dvnone
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0:
          self = .dvnone
      case 1:
          self = .dvrelation
      case 2:
          self = .dvcreateObject
      case 3:
          self = .dvviews
      default:
          self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .dvnone:
          return 0
      case .dvrelation:
          return 1
      case .dvcreateObject:
          return 2
      case .dvviews:
          return 3
      case .UNRECOGNIZED(let i):
          return i
      }
    }

  }

  public init() {
  }
}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {
  }
  typealias Version = _2
}
extension Anytype_Model_Restrictions: @unchecked Sendable {
}

extension Anytype_Model_Restrictions: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Restrictions"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "object"),
    2: .same(proto: "dataview"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1:
          try {
              try decoder.decodeRepeatedEnumField(value: &self.object)
          }()
      case 2:
          try {
              try decoder.decodeRepeatedMessageField(value: &self.dataview)
          }()
      default:
          break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.object.isEmpty {
      try visitor.visitPackedEnumField(value: self.object, fieldNumber: 1)
    }
    if !self.dataview.isEmpty {
      try visitor.visitRepeatedMessageField(value: self.dataview, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Anytype_Model_Restrictions, rhs: Anytype_Model_Restrictions) -> Bool {
    if lhs.object != rhs.object {
        return false
    }
    if lhs.dataview != rhs.dataview {
        return false
    }
    if lhs.unknownFields != rhs.unknownFields {
        return false
    }
    return true
  }
}