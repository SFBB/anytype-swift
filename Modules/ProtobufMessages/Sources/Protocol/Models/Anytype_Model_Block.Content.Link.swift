// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pkg/lib/pb/model/protos/models.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

extension Anytype_Model_Block.Content {
    public struct Link {
      // SwiftProtobuf.Message conformance is added in an extension below. See the
      // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
      // methods supported on all messages.

      /// id of the target block
      public var targetBlockID: String = String()

      /// deprecated
      public var style: Anytype_Model_Block.Content.Link.Style = .page

      public var fields: SwiftProtobuf.Google_Protobuf_Struct {
        get {return _fields ?? SwiftProtobuf.Google_Protobuf_Struct()}
        set {_fields = newValue}
      }
      /// Returns true if `fields` has been explicitly set.
      public var hasFields: Bool {return self._fields != nil}
      /// Clears the value of `fields`. Subsequent reads from it will return its default value.
      public mutating func clearFields() {self._fields = nil}

      public var iconSize: Anytype_Model_Block.Content.Link.IconSize = .sizeNone

      public var cardStyle: Anytype_Model_Block.Content.Link.CardStyle = .text

      public var description_p: Anytype_Model_Block.Content.Link.Description = .none

      public var relations: [String] = []

      public var unknownFields = SwiftProtobuf.UnknownStorage()

      public enum IconSize: SwiftProtobuf.Enum {
        public typealias RawValue = Int
        case sizeNone // = 0
        case sizeSmall // = 1
        case sizeMedium // = 2
        case UNRECOGNIZED(Int)

        public init() {
          self = .sizeNone
        }

        public init?(rawValue: Int) {
          switch rawValue {
          case 0: self = .sizeNone
          case 1: self = .sizeSmall
          case 2: self = .sizeMedium
          default: self = .UNRECOGNIZED(rawValue)
          }
        }

        public var rawValue: Int {
          switch self {
          case .sizeNone: return 0
          case .sizeSmall: return 1
          case .sizeMedium: return 2
          case .UNRECOGNIZED(let i): return i
          }
        }

      }

      public enum Style: SwiftProtobuf.Enum {
        public typealias RawValue = Int
        case page // = 0
        case dataview // = 1
        case dashboard // = 2

        /// ...
        case archive // = 3
        case UNRECOGNIZED(Int)

        public init() {
          self = .page
        }

        public init?(rawValue: Int) {
          switch rawValue {
          case 0: self = .page
          case 1: self = .dataview
          case 2: self = .dashboard
          case 3: self = .archive
          default: self = .UNRECOGNIZED(rawValue)
          }
        }

        public var rawValue: Int {
          switch self {
          case .page: return 0
          case .dataview: return 1
          case .dashboard: return 2
          case .archive: return 3
          case .UNRECOGNIZED(let i): return i
          }
        }

      }

      public enum Description: SwiftProtobuf.Enum {
        public typealias RawValue = Int
        case none // = 0
        case added // = 1
        case content // = 2
        case UNRECOGNIZED(Int)

        public init() {
          self = .none
        }

        public init?(rawValue: Int) {
          switch rawValue {
          case 0: self = .none
          case 1: self = .added
          case 2: self = .content
          default: self = .UNRECOGNIZED(rawValue)
          }
        }

        public var rawValue: Int {
          switch self {
          case .none: return 0
          case .added: return 1
          case .content: return 2
          case .UNRECOGNIZED(let i): return i
          }
        }

      }

      public enum CardStyle: SwiftProtobuf.Enum {
        public typealias RawValue = Int
        case text // = 0
        case card // = 1
        case inline // = 2
        case UNRECOGNIZED(Int)

        public init() {
          self = .text
        }

        public init?(rawValue: Int) {
          switch rawValue {
          case 0: self = .text
          case 1: self = .card
          case 2: self = .inline
          default: self = .UNRECOGNIZED(rawValue)
          }
        }

        public var rawValue: Int {
          switch self {
          case .text: return 0
          case .card: return 1
          case .inline: return 2
          case .UNRECOGNIZED(let i): return i
          }
        }

      }

      public init() {}

      fileprivate var _fields: SwiftProtobuf.Google_Protobuf_Struct? = nil
    }    
}

extension Anytype_Model_Block.Content.Link.IconSize: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Block.Content.Link.IconSize] = [
    .sizeNone,
    .sizeSmall,
    .sizeMedium,
  ]
}

extension Anytype_Model_Block.Content.Link.Style: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Block.Content.Link.Style] = [
    .page,
    .dataview,
    .dashboard,
    .archive,
  ]
}

extension Anytype_Model_Block.Content.Link.Description: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Block.Content.Link.Description] = [
    .none,
    .added,
    .content,
  ]
}

extension Anytype_Model_Block.Content.Link.CardStyle: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Block.Content.Link.CardStyle] = [
    .text,
    .card,
    .inline,
  ]
}
extension Anytype_Model_Block.Content.Link: @unchecked Sendable {}
extension Anytype_Model_Block.Content.Link.IconSize: @unchecked Sendable {}
extension Anytype_Model_Block.Content.Link.Style: @unchecked Sendable {}
extension Anytype_Model_Block.Content.Link.Description: @unchecked Sendable {}
extension Anytype_Model_Block.Content.Link.CardStyle: @unchecked Sendable {}

extension Anytype_Model_Block.Content.Link: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Anytype_Model_Block.Content.protoMessageName + ".Link"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "targetBlockId"),
    2: .same(proto: "style"),
    3: .same(proto: "fields"),
    4: .same(proto: "iconSize"),
    5: .same(proto: "cardStyle"),
    6: .same(proto: "description"),
    7: .same(proto: "relations"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularStringField(value: &self.targetBlockID) }()
      case 2: try { try decoder.decodeSingularEnumField(value: &self.style) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._fields) }()
      case 4: try { try decoder.decodeSingularEnumField(value: &self.iconSize) }()
      case 5: try { try decoder.decodeSingularEnumField(value: &self.cardStyle) }()
      case 6: try { try decoder.decodeSingularEnumField(value: &self.description_p) }()
      case 7: try { try decoder.decodeRepeatedStringField(value: &self.relations) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    // The use of inline closures is to circumvent an issue where the compiler
    // allocates stack space for every if/case branch local when no optimizations
    // are enabled. https://github.com/apple/swift-protobuf/issues/1034 and
    // https://github.com/apple/swift-protobuf/issues/1182
    if !self.targetBlockID.isEmpty {
      try visitor.visitSingularStringField(value: self.targetBlockID, fieldNumber: 1)
    }
    if self.style != .page {
      try visitor.visitSingularEnumField(value: self.style, fieldNumber: 2)
    }
    try { if let v = self._fields {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    } }()
    if self.iconSize != .sizeNone {
      try visitor.visitSingularEnumField(value: self.iconSize, fieldNumber: 4)
    }
    if self.cardStyle != .text {
      try visitor.visitSingularEnumField(value: self.cardStyle, fieldNumber: 5)
    }
    if self.description_p != .none {
      try visitor.visitSingularEnumField(value: self.description_p, fieldNumber: 6)
    }
    if !self.relations.isEmpty {
      try visitor.visitRepeatedStringField(value: self.relations, fieldNumber: 7)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Anytype_Model_Block.Content.Link, rhs: Anytype_Model_Block.Content.Link) -> Bool {
    if lhs.targetBlockID != rhs.targetBlockID {return false}
    if lhs.style != rhs.style {return false}
    if lhs._fields != rhs._fields {return false}
    if lhs.iconSize != rhs.iconSize {return false}
    if lhs.cardStyle != rhs.cardStyle {return false}
    if lhs.description_p != rhs.description_p {return false}
    if lhs.relations != rhs.relations {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension Anytype_Model_Block.Content.Link.IconSize: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "SizeNone"),
    1: .same(proto: "SizeSmall"),
    2: .same(proto: "SizeMedium"),
  ]
}

extension Anytype_Model_Block.Content.Link.Style: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "Page"),
    1: .same(proto: "Dataview"),
    2: .same(proto: "Dashboard"),
    3: .same(proto: "Archive"),
  ]
}

extension Anytype_Model_Block.Content.Link.Description: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "None"),
    1: .same(proto: "Added"),
    2: .same(proto: "Content"),
  ]
}

extension Anytype_Model_Block.Content.Link.CardStyle: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "Text"),
    1: .same(proto: "Card"),
    2: .same(proto: "Inline"),
  ]
}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "anytype.model"
