// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pkg/lib/pb/model/protos/models.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

public enum Anytype_Model_SmartBlockType: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// deprecated
  case accountOld // = 0
  case page // = 16
  case profilePage // = 17
  case home // = 32
  case archive // = 48
  case widget // = 112
  case file // = 256
  case template // = 288
  case bundledTemplate // = 289

  /// DEPRECATED
  case bundledRelation // = 512
  case subObject // = 513

  /// DEPRECATED
  case bundledObjectType // = 514
  case anytypeProfile // = 515
  case date // = 516
  case workspace // = 518
  case strelation // = 521
  case sttype // = 528
  case strelationOption // = 529
  case spaceView // = 530
  case identity // = 532
  case participant // = 534
  case missingObject // = 519
  case fileObject // = 533
  case notificationObject // = 535
  case devicesObject // = 536

  /// Container for any-store based chats
  case chatObject // = 537

  /// Any-store based object for chat
  case chatDerivedObject // = 544

  /// Container for account data in tech space
  case accountObject // = 545
  case UNRECOGNIZED(Int)

  public init() {
    self = .accountOld
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0:
        self = .accountOld
    case 16:
        self = .page
    case 17:
        self = .profilePage
    case 32:
        self = .home
    case 48:
        self = .archive
    case 112:
        self = .widget
    case 256:
        self = .file
    case 288:
        self = .template
    case 289:
        self = .bundledTemplate
    case 512:
        self = .bundledRelation
    case 513:
        self = .subObject
    case 514:
        self = .bundledObjectType
    case 515:
        self = .anytypeProfile
    case 516:
        self = .date
    case 518:
        self = .workspace
    case 519:
        self = .missingObject
    case 521:
        self = .strelation
    case 528:
        self = .sttype
    case 529:
        self = .strelationOption
    case 530:
        self = .spaceView
    case 532:
        self = .identity
    case 533:
        self = .fileObject
    case 534:
        self = .participant
    case 535:
        self = .notificationObject
    case 536:
        self = .devicesObject
    case 537:
        self = .chatObject
    case 544:
        self = .chatDerivedObject
    case 545:
        self = .accountObject
    default:
        self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .accountOld:
        return 0
    case .page:
        return 16
    case .profilePage:
        return 17
    case .home:
        return 32
    case .archive:
        return 48
    case .widget:
        return 112
    case .file:
        return 256
    case .template:
        return 288
    case .bundledTemplate:
        return 289
    case .bundledRelation:
        return 512
    case .subObject:
        return 513
    case .bundledObjectType:
        return 514
    case .anytypeProfile:
        return 515
    case .date:
        return 516
    case .workspace:
        return 518
    case .missingObject:
        return 519
    case .strelation:
        return 521
    case .sttype:
        return 528
    case .strelationOption:
        return 529
    case .spaceView:
        return 530
    case .identity:
        return 532
    case .fileObject:
        return 533
    case .participant:
        return 534
    case .notificationObject:
        return 535
    case .devicesObject:
        return 536
    case .chatObject:
        return 537
    case .chatDerivedObject:
        return 544
    case .accountObject:
        return 545
    case .UNRECOGNIZED(let i):
        return i
    }
  }

}

extension Anytype_Model_SmartBlockType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_SmartBlockType] = [
    .accountOld,
    .page,
    .profilePage,
    .home,
    .archive,
    .widget,
    .file,
    .template,
    .bundledTemplate,
    .bundledRelation,
    .subObject,
    .bundledObjectType,
    .anytypeProfile,
    .date,
    .workspace,
    .strelation,
    .sttype,
    .strelationOption,
    .spaceView,
    .identity,
    .participant,
    .missingObject,
    .fileObject,
    .notificationObject,
    .devicesObject,
    .chatObject,
    .chatDerivedObject,
    .accountObject,
  ]
}

/// RelationFormat describes how the underlying data is stored in the google.protobuf.Value and how it should be validated/sanitized
public enum Anytype_Model_RelationFormat: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// string
  case longtext // = 0

  /// string, usually short enough. May be truncated in the future
  case shorttext // = 1

  /// double
  case number // = 2

  /// string or list of string(len==1)
  case status // = 3

  /// list of string (choose multiple from a list)
  case tag // = 11

  /// float64(pb.Value doesn't have int64) or the string
  case date // = 4

  /// relation can has objects of specific types: file, image, audio, video
  case file // = 5

  /// boolean
  case checkbox // = 6

  /// string with sanity check
  case url // = 7

  /// string with sanity check
  case email // = 8

  /// string with sanity check
  case phone // = 9

  /// one emoji, can contains multiple utf-8 symbols
  case emoji // = 10

  /// relation can has objectType to specify objectType
  case object // = 100

  /// base64-encoded relation pb model
  case relations // = 101
  case UNRECOGNIZED(Int)

  public init() {
    self = .longtext
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0:
        self = .longtext
    case 1:
        self = .shorttext
    case 2:
        self = .number
    case 3:
        self = .status
    case 4:
        self = .date
    case 5:
        self = .file
    case 6:
        self = .checkbox
    case 7:
        self = .url
    case 8:
        self = .email
    case 9:
        self = .phone
    case 10:
        self = .emoji
    case 11:
        self = .tag
    case 100:
        self = .object
    case 101:
        self = .relations
    default:
        self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .longtext:
        return 0
    case .shorttext:
        return 1
    case .number:
        return 2
    case .status:
        return 3
    case .date:
        return 4
    case .file:
        return 5
    case .checkbox:
        return 6
    case .url:
        return 7
    case .email:
        return 8
    case .phone:
        return 9
    case .emoji:
        return 10
    case .tag:
        return 11
    case .object:
        return 100
    case .relations:
        return 101
    case .UNRECOGNIZED(let i):
        return i
    }
  }

}

extension Anytype_Model_RelationFormat: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_RelationFormat] = [
    .longtext,
    .shorttext,
    .number,
    .status,
    .tag,
    .date,
    .file,
    .checkbox,
    .url,
    .email,
    .phone,
    .emoji,
    .object,
    .relations,
  ]
}

public enum Anytype_Model_ObjectOrigin: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case none // = 0
  case clipboard // = 1
  case dragAndDrop // = 2
  case `import` // = 3
  case webclipper // = 4
  case sharingExtension // = 5
  case usecase // = 6
  case builtin // = 7
  case bookmark // = 8
  case api // = 9
  case UNRECOGNIZED(Int)

  public init() {
    self = .none
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0:
        self = .none
    case 1:
        self = .clipboard
    case 2:
        self = .dragAndDrop
    case 3:
        self = .import
    case 4:
        self = .webclipper
    case 5:
        self = .sharingExtension
    case 6:
        self = .usecase
    case 7:
        self = .builtin
    case 8:
        self = .bookmark
    case 9:
        self = .api
    default:
        self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .none:
        return 0
    case .clipboard:
        return 1
    case .dragAndDrop:
        return 2
    case .import:
        return 3
    case .webclipper:
        return 4
    case .sharingExtension:
        return 5
    case .usecase:
        return 6
    case .builtin:
        return 7
    case .bookmark:
        return 8
    case .api:
        return 9
    case .UNRECOGNIZED(let i):
        return i
    }
  }

}

extension Anytype_Model_ObjectOrigin: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_ObjectOrigin] = [
    .none,
    .clipboard,
    .dragAndDrop,
    .import,
    .webclipper,
    .sharingExtension,
    .usecase,
    .builtin,
    .bookmark,
    .api,
  ]
}

public enum Anytype_Model_SpaceStatus: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// Unknown means the space is not loaded yet
  case unknown // = 0

  /// Loading - the space in progress of loading
  case loading // = 1

  /// Ok - the space loaded and available
  case ok // = 2

  /// Missing - the space is missing
  case missing // = 3

  /// Error - the space loading ended with an error
  case error // = 4

  /// RemoteWaitingDeletion - network status is "waiting deletion"
  case remoteWaitingDeletion // = 5

  /// RemoteDeleted - the space is deleted in the current network
  case remoteDeleted // = 6

  /// SpaceDeleted - the space should be deleted in the network
  case spaceDeleted // = 7

  /// SpaceActive - the space is active in the network
  case spaceActive // = 8

  /// SpaceJoining - the account is joining the space
  case spaceJoining // = 9

  /// SpaceRemoving - the account is removing from space or the space is removed from network
  case spaceRemoving // = 10
  case UNRECOGNIZED(Int)

  public init() {
    self = .unknown
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0:
        self = .unknown
    case 1:
        self = .loading
    case 2:
        self = .ok
    case 3:
        self = .missing
    case 4:
        self = .error
    case 5:
        self = .remoteWaitingDeletion
    case 6:
        self = .remoteDeleted
    case 7:
        self = .spaceDeleted
    case 8:
        self = .spaceActive
    case 9:
        self = .spaceJoining
    case 10:
        self = .spaceRemoving
    default:
        self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .unknown:
        return 0
    case .loading:
        return 1
    case .ok:
        return 2
    case .missing:
        return 3
    case .error:
        return 4
    case .remoteWaitingDeletion:
        return 5
    case .remoteDeleted:
        return 6
    case .spaceDeleted:
        return 7
    case .spaceActive:
        return 8
    case .spaceJoining:
        return 9
    case .spaceRemoving:
        return 10
    case .UNRECOGNIZED(let i):
        return i
    }
  }

}

extension Anytype_Model_SpaceStatus: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_SpaceStatus] = [
    .unknown,
    .loading,
    .ok,
    .missing,
    .error,
    .remoteWaitingDeletion,
    .remoteDeleted,
    .spaceDeleted,
    .spaceActive,
    .spaceJoining,
    .spaceRemoving,
  ]
}

public enum Anytype_Model_ParticipantPermissions: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case reader // = 0
  case writer // = 1
  case owner // = 2
  case noPermissions // = 3
  case UNRECOGNIZED(Int)

  public init() {
    self = .reader
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0:
        self = .reader
    case 1:
        self = .writer
    case 2:
        self = .owner
    case 3:
        self = .noPermissions
    default:
        self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .reader:
        return 0
    case .writer:
        return 1
    case .owner:
        return 2
    case .noPermissions:
        return 3
    case .UNRECOGNIZED(let i):
        return i
    }
  }

}

extension Anytype_Model_ParticipantPermissions: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_ParticipantPermissions] = [
    .reader,
    .writer,
    .owner,
    .noPermissions,
  ]
}

public enum Anytype_Model_ParticipantStatus: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case joining // = 0
  case active // = 1
  case removed // = 2
  case declined // = 3
  case removing // = 4
  case canceled // = 5
  case UNRECOGNIZED(Int)

  public init() {
    self = .joining
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0:
        self = .joining
    case 1:
        self = .active
    case 2:
        self = .removed
    case 3:
        self = .declined
    case 4:
        self = .removing
    case 5:
        self = .canceled
    default:
        self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .joining:
        return 0
    case .active:
        return 1
    case .removed:
        return 2
    case .declined:
        return 3
    case .removing:
        return 4
    case .canceled:
        return 5
    case .UNRECOGNIZED(let i):
        return i
    }
  }

}

extension Anytype_Model_ParticipantStatus: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_ParticipantStatus] = [
    .joining,
    .active,
    .removed,
    .declined,
    .removing,
    .canceled,
  ]
}

public enum Anytype_Model_SpaceAccessType: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case `private` // = 0
  case personal // = 1
  case shared // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .private
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0:
        self = .private
    case 1:
        self = .personal
    case 2:
        self = .shared
    default:
        self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .private:
        return 0
    case .personal:
        return 1
    case .shared:
        return 2
    case .UNRECOGNIZED(let i):
        return i
    }
  }

}

extension Anytype_Model_SpaceAccessType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_SpaceAccessType] = [
    .private,
    .personal,
    .shared,
  ]
}

public enum Anytype_Model_ImageKind: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case basic // = 0
  case cover // = 1
  case icon // = 2
  case automaticallyAdded // = 3
  case UNRECOGNIZED(Int)

  public init() {
    self = .basic
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0:
        self = .basic
    case 1:
        self = .cover
    case 2:
        self = .icon
    case 3:
        self = .automaticallyAdded
    default:
        self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .basic:
        return 0
    case .cover:
        return 1
    case .icon:
        return 2
    case .automaticallyAdded:
        return 3
    case .UNRECOGNIZED(let i):
        return i
    }
  }

}

extension Anytype_Model_ImageKind: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_ImageKind] = [
    .basic,
    .cover,
    .icon,
    .automaticallyAdded,
  ]
}

public enum Anytype_Model_FileIndexingStatus: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case notIndexed // = 0
  case indexed // = 1
  case notFound // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .notIndexed
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0:
        self = .notIndexed
    case 1:
        self = .indexed
    case 2:
        self = .notFound
    default:
        self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .notIndexed:
        return 0
    case .indexed:
        return 1
    case .notFound:
        return 2
    case .UNRECOGNIZED(let i):
        return i
    }
  }

}

extension Anytype_Model_FileIndexingStatus: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_FileIndexingStatus] = [
    .notIndexed,
    .indexed,
    .notFound,
  ]
}

public enum Anytype_Model_SpaceShareableStatus: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case statusUnknown // = 0
  case statusShareable // = 1
  case statusNotShareable // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .statusUnknown
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0:
        self = .statusUnknown
    case 1:
        self = .statusShareable
    case 2:
        self = .statusNotShareable
    default:
        self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .statusUnknown:
        return 0
    case .statusShareable:
        return 1
    case .statusNotShareable:
        return 2
    case .UNRECOGNIZED(let i):
        return i
    }
  }

}

extension Anytype_Model_SpaceShareableStatus: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_SpaceShareableStatus] = [
    .statusUnknown,
    .statusShareable,
    .statusNotShareable,
  ]
}

public enum Anytype_Model_NameserviceNameType: SwiftProtobuf.Enum {
  public typealias RawValue = Int

  /// .any suffix
  case anyName // = 0
  case UNRECOGNIZED(Int)

  public init() {
    self = .anyName
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0:
        self = .anyName
    default:
        self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .anyName:
        return 0
    case .UNRECOGNIZED(let i):
        return i
    }
  }

}

extension Anytype_Model_NameserviceNameType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_NameserviceNameType] = [
    .anyName,
  ]
}

public enum Anytype_Model_DeviceNetworkType: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case wifi // = 0
  case cellular // = 1
  case notConnected // = 2
  case UNRECOGNIZED(Int)

  public init() {
    self = .wifi
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0:
        self = .wifi
    case 1:
        self = .cellular
    case 2:
        self = .notConnected
    default:
        self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .wifi:
        return 0
    case .cellular:
        return 1
    case .notConnected:
        return 2
    case .UNRECOGNIZED(let i):
        return i
    }
  }

}

extension Anytype_Model_DeviceNetworkType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_DeviceNetworkType] = [
    .wifi,
    .cellular,
    .notConnected,
  ]
}

extension Anytype_Model_Block.Position: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Block.Position] = [
    .none,
    .top,
    .bottom,
    .left,
    .right,
    .inner,
    .replace,
    .innerFirst,
  ]
}

extension Anytype_Model_Block.Align: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Block.Align] = [
    .left,
    .center,
    .right,
    .justify,
  ]
}

extension Anytype_Model_Block.VerticalAlign: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Block.VerticalAlign] = [
    .top,
    .middle,
    .bottom,
  ]
}

extension Anytype_Model_Account.StatusType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Account.StatusType] = [
    .active,
    .pendingDeletion,
    .startedDeletion,
    .deleted,
  ]
}

extension Anytype_Model_Account.Auth.LocalApiScope: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Account.Auth.LocalApiScope] = [
    .limited,
    .jsonApi,
    .full,
  ]
}

extension Anytype_Model_LinkPreview.TypeEnum: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_LinkPreview.TypeEnum] = [
    .unknown,
    .page,
    .image,
    .text,
  ]
}

extension Anytype_Model_Restrictions.ObjectRestriction: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Restrictions.ObjectRestriction] = [
    .none,
    .delete,
    .relations,
    .blocks,
    .details,
    .typeChange,
    .layoutChange,
    .template,
    .duplicate,
    .createObjectOfThisType,
    .publish,
  ]
}

extension Anytype_Model_Restrictions.DataviewRestriction: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Restrictions.DataviewRestriction] = [
    .dvnone,
    .dvrelation,
    .dvcreateObject,
    .dvviews,
  ]
}

extension Anytype_Model_ObjectType.Layout: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_ObjectType.Layout] = [
    .basic,
    .profile,
    .todo,
    .set,
    .objectType,
    .relation,
    .file,
    .dashboard,
    .image,
    .note,
    .space,
    .bookmark,
    .relationOptionsList,
    .relationOption,
    .collection,
    .audio,
    .video,
    .date,
    .spaceView,
    .participant,
    .pdf,
    .chat,
    .chatDerived,
    .tag,
  ]
}

extension Anytype_Model_Relation.Scope: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Relation.Scope] = [
    .object,
    .type,
    .setOfTheSameType,
    .objectsOfTheSameType,
    .library,
  ]
}

extension Anytype_Model_Relation.DataSource: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Relation.DataSource] = [
    .details,
    .derived,
    .account,
    .local,
  ]
}

extension Anytype_Model_InternalFlag.Value: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_InternalFlag.Value] = [
    .editorDeleteEmpty,
    .editorSelectType,
    .editorSelectTemplate,
    .collectionDontIndexLinks,
  ]
}

extension Anytype_Model_Notification.Status: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Notification.Status] = [
    .created,
    .shown,
    .read,
    .replied,
  ]
}

extension Anytype_Model_Notification.ActionType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Notification.ActionType] = [
    .close,
  ]
}

extension Anytype_Model_Notification.Export.Code: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Notification.Export.Code] = [
    .null,
    .unknownError,
    .badInput,
  ]
}

extension Anytype_Model_Export.Format: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Export.Format] = [
    .markdown,
    .protobuf,
    .json,
    .dot,
    .svg,
    .graphJson,
  ]
}

extension Anytype_Model_Import.TypeEnum: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Import.TypeEnum] = [
    .notion,
    .markdown,
    .external,
    .pb,
    .html,
    .txt,
    .csv,
  ]
}

extension Anytype_Model_Import.ErrorCode: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Import.ErrorCode] = [
    .null,
    .unknownError,
    .badInput,
    .internalError,
    .fileLoadError,
    .importIsCanceled,
    .notionNoObjectsInIntegration,
    .notionServerIsUnavailable,
    .notionRateLimitExceeded,
    .fileImportNoObjectsInZipArchive,
    .fileImportNoObjectsInDirectory,
    .htmlWrongHtmlStructure,
    .pbNotAnyblockFormat,
    .csvLimitOfRowsOrRelationsExceeded,
    .insufficientPermissions,
  ]
}

extension Anytype_Model_Membership.Status: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Membership.Status] = [
    .unknown,
    .pending,
    .active,
    .pendingRequiresFinalization,
  ]
}

extension Anytype_Model_Membership.PaymentMethod: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Membership.PaymentMethod] = [
    .methodNone,
    .methodStripe,
    .methodCrypto,
    .methodInappApple,
    .methodInappGoogle,
  ]
}

extension Anytype_Model_Membership.EmailVerificationStatus: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_Membership.EmailVerificationStatus] = [
    .statusNotVerified,
    .statusCodeSent,
    .statusVerified,
  ]
}

extension Anytype_Model_MembershipTierData.PeriodType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_MembershipTierData.PeriodType] = [
    .unknown,
    .unlimited,
    .days,
    .weeks,
    .months,
    .years,
  ]
}

extension Anytype_Model_ChatMessage.Attachment.AttachmentType: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_ChatMessage.Attachment.AttachmentType] = [
    .file,
    .image,
    .link,
  ]
}
extension Anytype_Model_SmartBlockType: @unchecked Sendable {
}
extension Anytype_Model_RelationFormat: @unchecked Sendable {
}
extension Anytype_Model_ObjectOrigin: @unchecked Sendable {
}
extension Anytype_Model_SpaceStatus: @unchecked Sendable {
}
extension Anytype_Model_ParticipantPermissions: @unchecked Sendable {
}
extension Anytype_Model_ParticipantStatus: @unchecked Sendable {
}
extension Anytype_Model_SpaceAccessType: @unchecked Sendable {
}
extension Anytype_Model_ImageKind: @unchecked Sendable {
}
extension Anytype_Model_FileIndexingStatus: @unchecked Sendable {
}
extension Anytype_Model_SpaceShareableStatus: @unchecked Sendable {
}
extension Anytype_Model_NameserviceNameType: @unchecked Sendable {
}
extension Anytype_Model_DeviceNetworkType: @unchecked Sendable {
}
extension Anytype_Model_Block.OneOf_Content: @unchecked Sendable {
}
extension Anytype_Model_Block.Position: @unchecked Sendable {
}
extension Anytype_Model_Block.Align: @unchecked Sendable {
}
extension Anytype_Model_Block.VerticalAlign: @unchecked Sendable {
}
extension Anytype_Model_Account.StatusType: @unchecked Sendable {
}
extension Anytype_Model_Account.Auth.LocalApiScope: @unchecked Sendable {
}
extension Anytype_Model_LinkPreview.TypeEnum: @unchecked Sendable {
}
extension Anytype_Model_Restrictions.ObjectRestriction: @unchecked Sendable {
}
extension Anytype_Model_Restrictions.DataviewRestriction: @unchecked Sendable {
}
extension Anytype_Model_ObjectType.Layout: @unchecked Sendable {
}
extension Anytype_Model_Relation.Scope: @unchecked Sendable {
}
extension Anytype_Model_Relation.DataSource: @unchecked Sendable {
}
extension Anytype_Model_InternalFlag.Value: @unchecked Sendable {
}
extension Anytype_Model_Metadata.OneOf_Payload: @unchecked Sendable {
}
extension Anytype_Model_Notification.OneOf_Payload: @unchecked Sendable {
}
extension Anytype_Model_Notification.Status: @unchecked Sendable {
}
extension Anytype_Model_Notification.ActionType: @unchecked Sendable {
}
extension Anytype_Model_Notification.Export.Code: @unchecked Sendable {
}
extension Anytype_Model_Export.Format: @unchecked Sendable {
}
extension Anytype_Model_Import.TypeEnum: @unchecked Sendable {
}
extension Anytype_Model_Import.ErrorCode: @unchecked Sendable {
}
extension Anytype_Model_Membership.Status: @unchecked Sendable {
}
extension Anytype_Model_Membership.PaymentMethod: @unchecked Sendable {
}
extension Anytype_Model_Membership.EmailVerificationStatus: @unchecked Sendable {
}
extension Anytype_Model_MembershipTierData.PeriodType: @unchecked Sendable {
}
extension Anytype_Model_ChatMessage.Attachment.AttachmentType: @unchecked Sendable {
}

extension Anytype_Model_SmartBlockType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "AccountOld"),
    16: .same(proto: "Page"),
    17: .same(proto: "ProfilePage"),
    32: .same(proto: "Home"),
    48: .same(proto: "Archive"),
    112: .same(proto: "Widget"),
    256: .same(proto: "File"),
    288: .same(proto: "Template"),
    289: .same(proto: "BundledTemplate"),
    512: .same(proto: "BundledRelation"),
    513: .same(proto: "SubObject"),
    514: .same(proto: "BundledObjectType"),
    515: .same(proto: "AnytypeProfile"),
    516: .same(proto: "Date"),
    518: .same(proto: "Workspace"),
    519: .same(proto: "MissingObject"),
    521: .same(proto: "STRelation"),
    528: .same(proto: "STType"),
    529: .same(proto: "STRelationOption"),
    530: .same(proto: "SpaceView"),
    532: .same(proto: "Identity"),
    533: .same(proto: "FileObject"),
    534: .same(proto: "Participant"),
    535: .same(proto: "NotificationObject"),
    536: .same(proto: "DevicesObject"),
    537: .same(proto: "ChatObject"),
    544: .same(proto: "ChatDerivedObject"),
    545: .same(proto: "AccountObject"),
  ]
}

extension Anytype_Model_RelationFormat: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "longtext"),
    1: .same(proto: "shorttext"),
    2: .same(proto: "number"),
    3: .same(proto: "status"),
    4: .same(proto: "date"),
    5: .same(proto: "file"),
    6: .same(proto: "checkbox"),
    7: .same(proto: "url"),
    8: .same(proto: "email"),
    9: .same(proto: "phone"),
    10: .same(proto: "emoji"),
    11: .same(proto: "tag"),
    100: .same(proto: "object"),
    101: .same(proto: "relations"),
  ]
}

extension Anytype_Model_ObjectOrigin: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "none"),
    1: .same(proto: "clipboard"),
    2: .same(proto: "dragAndDrop"),
    3: .same(proto: "import"),
    4: .same(proto: "webclipper"),
    5: .same(proto: "sharingExtension"),
    6: .same(proto: "usecase"),
    7: .same(proto: "builtin"),
    8: .same(proto: "bookmark"),
    9: .same(proto: "api"),
  ]
}

extension Anytype_Model_SpaceStatus: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "Unknown"),
    1: .same(proto: "Loading"),
    2: .same(proto: "Ok"),
    3: .same(proto: "Missing"),
    4: .same(proto: "Error"),
    5: .same(proto: "RemoteWaitingDeletion"),
    6: .same(proto: "RemoteDeleted"),
    7: .same(proto: "SpaceDeleted"),
    8: .same(proto: "SpaceActive"),
    9: .same(proto: "SpaceJoining"),
    10: .same(proto: "SpaceRemoving"),
  ]
}

extension Anytype_Model_ParticipantPermissions: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "Reader"),
    1: .same(proto: "Writer"),
    2: .same(proto: "Owner"),
    3: .same(proto: "NoPermissions"),
  ]
}

extension Anytype_Model_ParticipantStatus: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "Joining"),
    1: .same(proto: "Active"),
    2: .same(proto: "Removed"),
    3: .same(proto: "Declined"),
    4: .same(proto: "Removing"),
    5: .same(proto: "Canceled"),
  ]
}

extension Anytype_Model_SpaceAccessType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "Private"),
    1: .same(proto: "Personal"),
    2: .same(proto: "Shared"),
  ]
}

extension Anytype_Model_ImageKind: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "Basic"),
    1: .same(proto: "Cover"),
    2: .same(proto: "Icon"),
    3: .same(proto: "AutomaticallyAdded"),
  ]
}

extension Anytype_Model_FileIndexingStatus: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "NotIndexed"),
    1: .same(proto: "Indexed"),
    2: .same(proto: "NotFound"),
  ]
}

extension Anytype_Model_SpaceShareableStatus: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "StatusUnknown"),
    1: .same(proto: "StatusShareable"),
    2: .same(proto: "StatusNotShareable"),
  ]
}

extension Anytype_Model_NameserviceNameType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "AnyName"),
  ]
}

extension Anytype_Model_DeviceNetworkType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "WIFI"),
    1: .same(proto: "CELLULAR"),
    2: .same(proto: "NOT_CONNECTED"),
  ]
}

extension Anytype_Model_Block.Position: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "None"),
    1: .same(proto: "Top"),
    2: .same(proto: "Bottom"),
    3: .same(proto: "Left"),
    4: .same(proto: "Right"),
    5: .same(proto: "Inner"),
    6: .same(proto: "Replace"),
    7: .same(proto: "InnerFirst"),
  ]
}

extension Anytype_Model_Block.Align: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "AlignLeft"),
    1: .same(proto: "AlignCenter"),
    2: .same(proto: "AlignRight"),
    3: .same(proto: "AlignJustify"),
  ]
}

extension Anytype_Model_Block.VerticalAlign: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "VerticalAlignTop"),
    1: .same(proto: "VerticalAlignMiddle"),
    2: .same(proto: "VerticalAlignBottom"),
  ]
}

extension Anytype_Model_Account.StatusType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "Active"),
    1: .same(proto: "PendingDeletion"),
    2: .same(proto: "StartedDeletion"),
    3: .same(proto: "Deleted"),
  ]
}

extension Anytype_Model_Account.Auth.LocalApiScope: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "Limited"),
    1: .same(proto: "JsonAPI"),
    2: .same(proto: "Full"),
  ]
}

extension Anytype_Model_LinkPreview.TypeEnum: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "Unknown"),
    1: .same(proto: "Page"),
    2: .same(proto: "Image"),
    3: .same(proto: "Text"),
  ]
}

extension Anytype_Model_Restrictions.ObjectRestriction: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "None"),
    1: .same(proto: "Delete"),
    2: .same(proto: "Relations"),
    3: .same(proto: "Blocks"),
    4: .same(proto: "Details"),
    5: .same(proto: "TypeChange"),
    6: .same(proto: "LayoutChange"),
    7: .same(proto: "Template"),
    8: .same(proto: "Duplicate"),
    9: .same(proto: "CreateObjectOfThisType"),
    10: .same(proto: "Publish"),
  ]
}

extension Anytype_Model_Restrictions.DataviewRestriction: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "DVNone"),
    1: .same(proto: "DVRelation"),
    2: .same(proto: "DVCreateObject"),
    3: .same(proto: "DVViews"),
  ]
}

extension Anytype_Model_ObjectType.Layout: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "basic"),
    1: .same(proto: "profile"),
    2: .same(proto: "todo"),
    3: .same(proto: "set"),
    4: .same(proto: "objectType"),
    5: .same(proto: "relation"),
    6: .same(proto: "file"),
    7: .same(proto: "dashboard"),
    8: .same(proto: "image"),
    9: .same(proto: "note"),
    10: .same(proto: "space"),
    11: .same(proto: "bookmark"),
    12: .same(proto: "relationOptionsList"),
    13: .same(proto: "relationOption"),
    14: .same(proto: "collection"),
    15: .same(proto: "audio"),
    16: .same(proto: "video"),
    17: .same(proto: "date"),
    18: .same(proto: "spaceView"),
    19: .same(proto: "participant"),
    20: .same(proto: "pdf"),
    21: .same(proto: "chat"),
    22: .same(proto: "chatDerived"),
    23: .same(proto: "tag"),
  ]
}

extension Anytype_Model_Relation.Scope: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "object"),
    1: .same(proto: "type"),
    2: .same(proto: "setOfTheSameType"),
    3: .same(proto: "objectsOfTheSameType"),
    4: .same(proto: "library"),
  ]
}

extension Anytype_Model_Relation.DataSource: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "details"),
    1: .same(proto: "derived"),
    2: .same(proto: "account"),
    3: .same(proto: "local"),
  ]
}

extension Anytype_Model_InternalFlag.Value: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "editorDeleteEmpty"),
    1: .same(proto: "editorSelectType"),
    2: .same(proto: "editorSelectTemplate"),
    3: .same(proto: "collectionDontIndexLinks"),
  ]
}

extension Anytype_Model_Notification.Status: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "Created"),
    1: .same(proto: "Shown"),
    2: .same(proto: "Read"),
    3: .same(proto: "Replied"),
  ]
}

extension Anytype_Model_Notification.ActionType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "CLOSE"),
  ]
}

extension Anytype_Model_Notification.Export.Code: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "NULL"),
    1: .same(proto: "UNKNOWN_ERROR"),
    2: .same(proto: "BAD_INPUT"),
  ]
}

extension Anytype_Model_Export.Format: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "Markdown"),
    1: .same(proto: "Protobuf"),
    2: .same(proto: "JSON"),
    3: .same(proto: "DOT"),
    4: .same(proto: "SVG"),
    5: .same(proto: "GRAPH_JSON"),
  ]
}

extension Anytype_Model_Import.TypeEnum: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "Notion"),
    1: .same(proto: "Markdown"),
    2: .same(proto: "External"),
    3: .same(proto: "Pb"),
    4: .same(proto: "Html"),
    5: .same(proto: "Txt"),
    6: .same(proto: "Csv"),
  ]
}

extension Anytype_Model_Import.ErrorCode: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "NULL"),
    1: .same(proto: "UNKNOWN_ERROR"),
    2: .same(proto: "BAD_INPUT"),
    3: .same(proto: "INTERNAL_ERROR"),
    5: .same(proto: "NOTION_NO_OBJECTS_IN_INTEGRATION"),
    6: .same(proto: "IMPORT_IS_CANCELED"),
    7: .same(proto: "CSV_LIMIT_OF_ROWS_OR_RELATIONS_EXCEEDED"),
    8: .same(proto: "FILE_LOAD_ERROR"),
    9: .same(proto: "INSUFFICIENT_PERMISSIONS"),
    10: .same(proto: "HTML_WRONG_HTML_STRUCTURE"),
    11: .same(proto: "PB_NOT_ANYBLOCK_FORMAT"),
    12: .same(proto: "NOTION_SERVER_IS_UNAVAILABLE"),
    13: .same(proto: "NOTION_RATE_LIMIT_EXCEEDED"),
    14: .same(proto: "FILE_IMPORT_NO_OBJECTS_IN_ZIP_ARCHIVE"),
    17: .same(proto: "FILE_IMPORT_NO_OBJECTS_IN_DIRECTORY"),
  ]
}

extension Anytype_Model_Membership.Status: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "StatusUnknown"),
    1: .same(proto: "StatusPending"),
    2: .same(proto: "StatusActive"),
    3: .same(proto: "StatusPendingRequiresFinalization"),
  ]
}

extension Anytype_Model_Membership.PaymentMethod: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "MethodNone"),
    1: .same(proto: "MethodStripe"),
    2: .same(proto: "MethodCrypto"),
    3: .same(proto: "MethodInappApple"),
    4: .same(proto: "MethodInappGoogle"),
  ]
}

extension Anytype_Model_Membership.EmailVerificationStatus: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "StatusNotVerified"),
    1: .same(proto: "StatusCodeSent"),
    2: .same(proto: "StatusVerified"),
  ]
}

extension Anytype_Model_MembershipTierData.PeriodType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "PeriodTypeUnknown"),
    1: .same(proto: "PeriodTypeUnlimited"),
    2: .same(proto: "PeriodTypeDays"),
    3: .same(proto: "PeriodTypeWeeks"),
    4: .same(proto: "PeriodTypeMonths"),
    5: .same(proto: "PeriodTypeYears"),
  ]
}

extension Anytype_Model_ChatMessage.Attachment.AttachmentType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "FILE"),
    1: .same(proto: "IMAGE"),
    2: .same(proto: "LINK"),
  ]
}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {
  }
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "anytype.model"