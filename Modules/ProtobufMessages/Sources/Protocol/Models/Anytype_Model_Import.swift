// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pkg/lib/pb/model/protos/models.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf
public struct Anytype_Model_Import {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum TypeEnum: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case notion // = 0
    case markdown // = 1

    /// external developers use it
    case external // = 2
    case pb // = 3
    case html // = 4
    case txt // = 5
    case csv // = 6
    case UNRECOGNIZED(Int)

    public init() {
      self = .notion
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0:
          self = .notion
      case 1:
          self = .markdown
      case 2:
          self = .external
      case 3:
          self = .pb
      case 4:
          self = .html
      case 5:
          self = .txt
      case 6:
          self = .csv
      default:
          self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .notion:
          return 0
      case .markdown:
          return 1
      case .external:
          return 2
      case .pb:
          return 3
      case .html:
          return 4
      case .txt:
          return 5
      case .csv:
          return 6
      case .UNRECOGNIZED(let i):
          return i
      }
    }

  }

  public enum ErrorCode: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case null // = 0
    case unknownError // = 1
    case badInput // = 2
    case internalError // = 3
    case fileLoadError // = 8
    case importIsCanceled // = 6
    case notionNoObjectsInIntegration // = 5
    case notionServerIsUnavailable // = 12
    case notionRateLimitExceeded // = 13
    case fileImportNoObjectsInZipArchive // = 14
    case fileImportNoObjectsInDirectory // = 17
    case htmlWrongHtmlStructure // = 10
    case pbNotAnyblockFormat // = 11
    case csvLimitOfRowsOrRelationsExceeded // = 7
    case insufficientPermissions // = 9
    case UNRECOGNIZED(Int)

    public init() {
      self = .null
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 0:
          self = .null
      case 1:
          self = .unknownError
      case 2:
          self = .badInput
      case 3:
          self = .internalError
      case 5:
          self = .notionNoObjectsInIntegration
      case 6:
          self = .importIsCanceled
      case 7:
          self = .csvLimitOfRowsOrRelationsExceeded
      case 8:
          self = .fileLoadError
      case 9:
          self = .insufficientPermissions
      case 10:
          self = .htmlWrongHtmlStructure
      case 11:
          self = .pbNotAnyblockFormat
      case 12:
          self = .notionServerIsUnavailable
      case 13:
          self = .notionRateLimitExceeded
      case 14:
          self = .fileImportNoObjectsInZipArchive
      case 17:
          self = .fileImportNoObjectsInDirectory
      default:
          self = .UNRECOGNIZED(rawValue)
      }
    }

    public var rawValue: Int {
      switch self {
      case .null:
          return 0
      case .unknownError:
          return 1
      case .badInput:
          return 2
      case .internalError:
          return 3
      case .notionNoObjectsInIntegration:
          return 5
      case .importIsCanceled:
          return 6
      case .csvLimitOfRowsOrRelationsExceeded:
          return 7
      case .fileLoadError:
          return 8
      case .insufficientPermissions:
          return 9
      case .htmlWrongHtmlStructure:
          return 10
      case .pbNotAnyblockFormat:
          return 11
      case .notionServerIsUnavailable:
          return 12
      case .notionRateLimitExceeded:
          return 13
      case .fileImportNoObjectsInZipArchive:
          return 14
      case .fileImportNoObjectsInDirectory:
          return 17
      case .UNRECOGNIZED(let i):
          return i
      }
    }

  }

  public init() {
  }
}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {
  }
  typealias Version = _2
}
extension Anytype_Model_Import: @unchecked Sendable {
}

extension Anytype_Model_Import: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = _protobuf_package + ".Import"
  public static let _protobuf_nameMap = SwiftProtobuf._NameMap()

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let _ = try decoder.nextFieldNumber() {
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Anytype_Model_Import, rhs: Anytype_Model_Import) -> Bool {
    if lhs.unknownFields != rhs.unknownFields {
        return false
    }
    return true
  }
}