// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pkg/lib/pb/model/protos/models.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

public enum Anytype_Model_ObjectOrigin: SwiftProtobuf.Enum {
  public typealias RawValue = Int
  case none // = 0
  case clipboard // = 1
  case dragAndDrop // = 2
  case `import` // = 3
  case webclipper // = 4
  case sharingExtension // = 5
  case usecase // = 6
  case builtin // = 7
  case bookmark // = 8
  case api // = 9
  case UNRECOGNIZED(Int)

  public init() {
    self = .none
  }

  public init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .none
    case 1: self = .clipboard
    case 2: self = .dragAndDrop
    case 3: self = .import
    case 4: self = .webclipper
    case 5: self = .sharingExtension
    case 6: self = .usecase
    case 7: self = .builtin
    case 8: self = .bookmark
    case 9: self = .api
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  public var rawValue: Int {
    switch self {
    case .none: return 0
    case .clipboard: return 1
    case .dragAndDrop: return 2
    case .import: return 3
    case .webclipper: return 4
    case .sharingExtension: return 5
    case .usecase: return 6
    case .builtin: return 7
    case .bookmark: return 8
    case .api: return 9
    case .UNRECOGNIZED(let i): return i
    }
  }

}

extension Anytype_Model_ObjectOrigin: CaseIterable {
  // The compiler won't synthesize support with the UNRECOGNIZED case.
  public static var allCases: [Anytype_Model_ObjectOrigin] = [
    .none,
    .clipboard,
    .dragAndDrop,
    .import,
    .webclipper,
    .sharingExtension,
    .usecase,
    .builtin,
    .bookmark,
    .api,
  ]
}
extension Anytype_Model_ObjectOrigin: @unchecked Sendable {}

extension Anytype_Model_ObjectOrigin: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "none"),
    1: .same(proto: "clipboard"),
    2: .same(proto: "dragAndDrop"),
    3: .same(proto: "import"),
    4: .same(proto: "webclipper"),
    5: .same(proto: "sharingExtension"),
    6: .same(proto: "usecase"),
    7: .same(proto: "builtin"),
    8: .same(proto: "bookmark"),
    9: .same(proto: "api"),
  ]
}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "anytype.model"
