// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pkg/lib/pb/model/protos/models.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf
public extension Anytype_Model_ChatMessage {
    public struct Attachment {
    // SwiftProtobuf.Message conformance is added in an extension below. See the
    // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
    // methods supported on all messages.

    /// Identifier for the attachment object
    public var target: String = String()

    /// Type of attachment
    public var type: Anytype_Model_ChatMessage.Attachment.AttachmentType = .file

    public var unknownFields = SwiftProtobuf.UnknownStorage()

    public enum AttachmentType: SwiftProtobuf.Enum {
      public typealias RawValue = Int

      /// File attachment
      case file // = 0

      /// Image attachment
      case image // = 1

      /// Link attachment
      case link // = 2
      case UNRECOGNIZED(Int)

      public init() {
        self = .file
      }

      public init?(rawValue: Int) {
        switch rawValue {
        case 0:
                self = .file
        case 1:
                self = .image
        case 2:
                self = .link
        default:
                self = .UNRECOGNIZED(rawValue)
        }
      }

      public var rawValue: Int {
        switch self {
        case .file:
                return 0
        case .image:
                return 1
        case .link:
                return 2
        case .UNRECOGNIZED(let i):
                return i
        }
      }

    }

    public init() {
        }
  }
}
extension Anytype_Model_ChatMessage.Attachment: @unchecked Sendable {
}

extension Anytype_Model_ChatMessage.Attachment: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = Anytype_Model_ChatMessage.protoMessageName + ".Attachment"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "target"),
    2: .same(proto: "type"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1:
          try {
              try decoder.decodeSingularStringField(value: &self.target)
          }()
      case 2:
          try {
              try decoder.decodeSingularEnumField(value: &self.type)
          }()
      default:
          break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if !self.target.isEmpty {
      try visitor.visitSingularStringField(value: self.target, fieldNumber: 1)
    }
    if self.type != .file {
      try visitor.visitSingularEnumField(value: self.type, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: Anytype_Model_ChatMessage.Attachment, rhs: Anytype_Model_ChatMessage.Attachment) -> Bool {
    if lhs.target != rhs.target {
        return false
    }
    if lhs.type != rhs.type {
        return false
    }
    if lhs.unknownFields != rhs.unknownFields {
        return false
    }
    return true
  }
}