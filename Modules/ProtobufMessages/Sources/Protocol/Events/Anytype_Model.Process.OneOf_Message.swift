// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: pb/protos/events.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf
extension Anytype_Model.Process {

    public enum OneOf_Message: Equatable {
      case dropFiles(Anytype_Model.Process.DropFiles)
      case `import`(Anytype_Model.Process.Import)
      case export(Anytype_Model.Process.Export)
      case saveFile(Anytype_Model.Process.SaveFile)
      case migration(Anytype_Model.Process.Migration)

    #if !swift(>=4.1)
      public static func ==(lhs: Anytype_Model.Process.OneOf_Message, rhs: Anytype_Model.Process.OneOf_Message) -> Bool {
        // The use of inline closures is to circumvent an issue where the compiler
        // allocates stack space for every case branch when no optimizations are
        // enabled. https://github.com/apple/swift-protobuf/issues/1034
        switch (lhs, rhs) {
        case (.dropFiles, .dropFiles):
            return {
                      guard case .dropFiles(let l) = lhs, case .dropFiles(let r) = rhs else {
                          preconditionFailure()
                      }
                      return l == r
                    }()
        case (.import, .import):
            return {
                      guard case .import(let l) = lhs, case .import(let r) = rhs else {
                          preconditionFailure()
                      }
                      return l == r
                    }()
        case (.export, .export):
            return {
                      guard case .export(let l) = lhs, case .export(let r) = rhs else {
                          preconditionFailure()
                      }
                      return l == r
                    }()
        case (.saveFile, .saveFile):
            return {
                      guard case .saveFile(let l) = lhs, case .saveFile(let r) = rhs else {
                          preconditionFailure()
                      }
                      return l == r
                    }()
        case (.migration, .migration):
            return {
                      guard case .migration(let l) = lhs, case .migration(let r) = rhs else {
                          preconditionFailure()
                      }
                      return l == r
                    }()
        default:
            return false
        }
      }
    #endif
    }
}
extension Anytype_Model.Process.OneOf_Message: @unchecked Sendable {
}

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {
  }
  typealias Version = _2
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "anytype"
